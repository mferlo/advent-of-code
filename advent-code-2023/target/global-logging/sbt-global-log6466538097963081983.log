[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\Matt\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\Matt\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.8.0 (Oracle Corporation Java 17.0.1)
[debug]       Load.loadUnit: plugins took 176.4275ms
[debug]       Load.loadUnit: defsScala took 0.3782ms
[debug] [Loading] Scanning directory C:\Users\Matt\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Matt\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 18.1237 ms
[debug]           Load.resolveProject(global-plugins) took 58.2635ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Matt\.sbt\1.0\plugins, plugins: List(<none>))) took 99.086ms
[debug] [Loading] Done in C:\Users\Matt\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 128.1085ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2164ms
[debug]     Load.loadUnit(file:/C:/Users/Matt/.sbt/1.0/plugins/, ...) took 315.6314ms
[debug]   Load.apply: load took 536.3856ms
[debug]   Load.apply: resolveProjects took 7.2135ms
[debug]   Load.apply: finalTransforms took 138.7721ms
[debug]   Load.apply: config.delegates took 8.3477ms
[debug]   Load.apply: Def.make(settings)... took 567.7229ms
[debug]   Load.apply: structureIndex took 132.6388ms
[debug]   Load.apply: mkStreams took 1.6875ms
[info] loading global plugins from C:\Users\Matt\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 6381.3638ms
[debug]           Load.loadUnit: plugins took 33.6427ms
[debug]           Load.loadUnit: defsScala took 0.0047ms
[debug] [Loading] Scanning directory C:\Users\Matt\Desktop\dev\advent-code\advent-code-2023\project
[debug]             Load.loadUnit: mkEval took 7.1549ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Matt\Desktop\dev\advent-code\advent-code-2023\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.4691 ms
[info] loading settings for project advent-code-2023-build from idea.sbt ...
[debug]               Load.resolveProject(advent-code-2023-build) took 6.8024ms
[debug]             Load.loadTransitive: finalizeProject(Project(id advent-code-2023-build, base: C:\Users\Matt\Desktop\dev\advent-code\advent-code-2023\project, plugins: List(<none>))) took 8.7727ms
[debug] [Loading] Done in C:\Users\Matt\Desktop\dev\advent-code\advent-code-2023\project, returning: (advent-code-2023-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 2506.0269ms
[debug]           Load.loadUnit: cleanEvalClasses took 6.4735ms
[debug]         Load.loadUnit(file:/C:/Users/Matt/Desktop/dev/advent-code/advent-code-2023/project/, ...) took 2547.287ms
[debug]       Load.apply: load took 2548.9862ms
[debug]       Load.apply: resolveProjects took 0.1182ms
[debug]       Load.apply: finalTransforms took 8.9051ms
[debug]       Load.apply: config.delegates took 0.4003ms
[debug]       Load.apply: Def.make(settings)... took 91.1296ms
[debug]       Load.apply: structureIndex took 25.7066ms
[debug]       Load.apply: mkStreams took 0.0021ms
[info] loading project definition from C:\Users\Matt\Desktop\dev\advent-code\advent-code-2023\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 4028.1704ms
[debug]     Load.loadUnit: defsScala took 0.0031ms
[debug] [Loading] Scanning directory C:\Users\Matt\Desktop\dev\advent-code\advent-code-2023
[debug]       Load.loadUnit: mkEval took 0.2328ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.9116 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 29.0016ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\Matt\Desktop\dev\advent-code\advent-code-2023, plugins: List(<none>))) took 33.0607ms
[debug] [Loading] Done in C:\Users\Matt\Desktop\dev\advent-code\advent-code-2023, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 1357.6202ms
[debug]     Load.loadUnit: cleanEvalClasses took 17.2162ms
[debug]   Load.loadUnit(file:/C:/Users/Matt/Desktop/dev/advent-code/advent-code-2023/, ...) took 5403.9887ms
[debug] Load.apply: load took 5405.8388ms
[debug] Load.apply: resolveProjects took 0.0908ms
[debug] Load.apply: finalTransforms took 23.3275ms
[debug] Load.apply: config.delegates took 0.332ms
[debug] Load.apply: Def.make(settings)... took 90.7137ms
[debug] Load.apply: structureIndex took 27.2559ms
[debug] Load.apply: mkStreams took 0.0024ms
[info] set current project to advent-code-2023 (in build file:/C:/Users/Matt/Desktop/dev/advent-code/advent-code-2023/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 54761 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 54761, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to advent-code-2023 (in build file:/C:/Users/Matt/Desktop/dev/advent-code/advent-code-2023/)
[debug] > Exec(idea-shell, None, None)
